"""""" Generics
set nocompatible
let mapleader=","               " Change mapleader from \ to ,
set hidden                      " When changing buffers, do not close (forcing a save) but hide
set nobackup                    " Don't create backup files
set wildmode=longest,list       " Tab-completion link bash
set encoding=utf-8


"""""" vim-plug
call plug#begin('~/.vim/plugged')
Plug 'vim-syntastic/syntastic'
Plug 'altercation/vim-colors-solarized'
Plug 'pangloss/vim-javascript'
Plug 'leafgarland/typescript-vim'
Plug 'maxmellon/vim-jsx-pretty'
Plug 'airblade/vim-gitgutter'
Plug 'preservim/nerdcommenter'
Plug 'morhetz/gruvbox'
Plug 'nathanaelkane/vim-indent-guides'
Plug 'elzr/vim-json'
Plug 'vim-airline/vim-airline'
Plug 'Vimjas/vim-python-pep8-indent'
call plug#end()

let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_enable_signs = 1
let g:syntastic_aggregate_errors = 1
let g:syntastic_python_python_exec = 'python3'
let g:syntastic_python_checkers = ['flake8', 'mypy']
let g:syntastic_sh_shellcheck_args = '-x'  " allow shellcheck to test source'd files

let g:gitgutter_sign_allow_clobber = 1

let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_guide_size = 1
let g:indent_guides_start_level = 2
let g:indent_guides_auto_colors = 0
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  ctermbg=236
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=236

let g:vim_json_syntax_conceal = 0

let g:airline#extensions#tabline#enabled = 1


"""""" GUI stuff
set background=dark
" If gvim, or terminal has 256+ colors
autocmd vimenter * colorscheme gruvbox

au! GuiEnter * set vb t_vb=     " Disable the visual bell in gvim


"""""" Syntax stuff
syntax enable
set showmatch                   " Show matching parenthesis
set number                      " Show line numbers
set signcolumn=yes              " Always show sign gutter


"""""" Search
set incsearch                   " Display the match for a search pattern when halfway typing it
set ignorecase                  " Ignore case while searching
set hlsearch                    " Highlight search terms


"""""" Indentation
set autoindent                  " When moving to next line, autoident to same level
filetype plugin indent on       " Load file specific indenting pluging
set expandtab                   " Expand tabs to spaces
set smarttab                    " Insert spaces for tabs according to shiftwidth
set autoindent                  " Use indent from current line when starting a new one
set nocindent                   " Don't use c style indenting
set tabstop=4                   " Number of spaces in a tab
set shiftwidth=4                " Number of space for each indent
set shiftround                  " Use multiple of shiftwidth when indenting with < and >
set copyindent                  " Copy the previous indentation on autoindenting


"""""" Mouse support in vim
"set mouse=a
"set ttymouse=xterm2


"""""" White space
" Highlight whitespace at the end of lines
hi ExtraWhitespace ctermbg=red guibg=red
call matchadd('ExtraWhitespace', '\s\+\%#\@<!$')

" Highlight exclaimation marks
hi ExclaimationMarks ctermbg=red guibg=red ctermfg=white guifg=white
call matchadd('ExclaimationMarks', '!')

"""""" Editing
set backspace=indent,eol,start
set list                        " Highlight invisible characters
set listchars=extends:#         " Display a # at the end of wrapping lines
" Highlight the line the cursor is on in the current window only
au VimEnter,WinEnter,BufWinEnter * setlocal cursorline
au WinLeave * setlocal nocursorline
au InsertLeave,CompleteDone * if pumvisible() == 0 | pclose | endif


"""""" Special case stuff
au BufNewFile,BufRead wscript set filetype=python
autocmd FileType tf setlocal shiftwidth=2 softtabstop=2 expandtab
autocmd FileType yaml setlocal shiftwidth=2 softtabstop=2 expandtab


"""""" Fix typos
cabbrev Wq wq
cabbrev WQ wq
cabbrev Q q
cabbrev W w
cabbrev E e
cabbrev Bw bw
cabbrev BW bw
cabbrev bW bw
cabbrev Bn bn
cabbrev BN bn
cabbrev bN bn
cabbrev Bp bp
cabbrev BP bp
cabbrev bP bp
cabbrev Qall qall
" Disable Shift Enter due to fat fingers
map <S-CR> <Nop>


"""""" Keyboard remapping
" Make ; another : - no more shift needed!
nnoremap ; :
" Set ,/ to hid search hilights
nmap <silent> ,/ ;nohlsearch<CR>
" Make arrow keys useful again
map <down> <ESC>;bn<RETURN>
map <up> <ESC>;bp<RETURN>
map <left> <ESC><C-W><left>
map <right> <ESC><C-W><right>
" YCM go to definition
nnoremap <leader>l :YcmCompleter GoToDefinition<CR>
nmap <leader>D <plug>(YCMHover)


"""""" Terminal stuff
set title                       " Change terminal's title
set visualbell                  " No bell
set noerrorbells                " No bell
set updatetime=100


"""""" Scroll with context
set scrolloff=10
set sidescrolloff=10


" Long undo and command history
set undolevels=1000
set history=200

" Save undo history permanently
if has('persistent_undo')
    set undodir=~/.vimundo
    set undofile
endif


""""""""""""""""""""""""""""""""""
" autoreloading of vim config when saving it
autocmd! bufwritepost .vimrc source ~/.vimrc
autocmd! bufwritepost .vimrc source ~/.vim/vimrc
