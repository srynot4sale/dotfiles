"""""" Generics
set nocompatible
let mapleader=","               " Change mapleader from \ to ,
set hidden                      " When changing buffers, do not close (forcing a save) but hide
set nobackup                    " Don't create backup files
set wildmode=longest,list       " Tab-completion link bash


"""""" vim-plug
call plug#begin('~/.vim/plugged')
Plug 'vim-syntastic/syntastic'
Plug 'fholgado/minibufexpl.vim'
Plug 'Valloric/YouCompleteMe', { 'do': './install.py' }
Plug 'vimwiki/vimwiki'
Plug 'altercation/vim-colors-solarized'
Plug 'pangloss/vim-javascript'
call plug#end()

let g:syntastic_python_python_exec = 'python'
let g:syntastic_python_checkers = ['flake8']
let g:syntastic_python_flake8_args = '--ignore E501,E127,E126'
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0


let g:ycm_python_binary_path = 'python'


"""""" GUI stuff
if &t_Co >= 256 || has("gui_running")
    set background=dark
    colorscheme mustang          " If gvim, or terminal has 256+ colors
endif

if has("gui_running")
    set guioptions-=T
    set gfn=DejaVu\ Sans\ Mono\ 9
endif

au! GuiEnter * set vb t_vb=     " Disable the visual bell in gvim


"""""" Syntax stuff
syntax enable
set showmatch                   " Show matching parenthesis
set nu                          " Show line numbers


"""""" Search
set incsearch                   " Display the match for a search pattern when halfway typing it
set ignorecase                  " Ignore case while searching
set hlsearch                    " Highlight search terms


"""""" Indentation
set autoindent                  " When moving to next line, autoident to same level
filetype plugin indent on       " Load file specific indenting pluging
set expandtab                   " Expand tabs to spaces
set smarttab                    " Insert spaces for tabs according to shiftwidth
set autoindent                  " Use indent from current line when starting a new one
set nocindent                   " Don't use c style indenting
set tabstop=4                   " Number of spaces in a tab
set shiftwidth=4                " Number of space for each indent
set shiftround                  " Use multiple of shiftwidth when indenting with < and >
set copyindent                  " Copy the previous indentation on autoindenting


"""""" Mouse support in vim
"set mouse=a
"set ttymouse=xterm2


"""""" White space
" Highlight whitespace at the end of lines
hi ExtraWhitespace ctermbg=red guibg=red
call matchadd('ExtraWhitespace', '\s\+\%#\@<!$')

" Highlight exclaimation marks
hi ExclaimationMarks ctermbg=red guibg=red ctermfg=white guifg=white
call matchadd('ExclaimationMarks', '!')

"""""" Editing
set backspace=indent,eol,start
set list                        " Highlight invisible characters
set listchars=extends:#         " Display a # at the end of wrapping lines
" Highlight the line the cursor is on in the current window only
hi CursorLine   ctermbg=black guibg=black
hi CursorColumn ctermbg=black guibg=black
au BufRead * set cursorline
au InsertEnter * set cursorline
au InsertLeave * set cursorline
au ColorScheme * set cursorline


"""""" Fancy statusbar (from http://gist.github.com/187825)
set laststatus=2                " Always show the last status
set statusline=
set statusline+=%f "path to the file in the buffer, relative to current directory
set statusline+=\ %h%1*%m%r%w%0* " flag
set statusline+=\ [%{strlen(&ft)?&ft:'none'}, " filetype
set statusline+=%{&encoding}, " encoding
set statusline+=%{&fileformat}] " file format
set statusline+=\ CWD:%r%{getcwd()}%h
set statusline+=\ Line:%l/%L

" Syntastic status line
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*


"""""" PHP stuff
" highlights html inside of php strings
au FileType php let php_htmlInStrings=1

" make: % to check php syntax
set makeprg=php\ -l\ %
set errorformat=%m\ in\ %f\ on\ line\ %l

" consider *.js.php as JS files
au BufNewFile,BufRead *.js.php set filetype=javascript


"""""" vimiwki stuff
au FileType vimwiki colorscheme solarized
au FileType vimwiki set background=dark
au FileType vimwiki hi CursorLine ctermbg=NONE guibg=NONE
au FileType vimwiki hi CursorLine ctermbg=NONE guibg=NONE
au FileType vimwiki let g:solarized_termcolors=256
au FileType vimwiki let g:vimwiki_url_maxsave=0


"""""" Fix typos
cabbrev Wq wq
cabbrev WQ wq
cabbrev Q q
cabbrev W w
cabbrev E e
cabbrev Bw bw
cabbrev BW bw
cabbrev bW bw
cabbrev Bn bn
cabbrev BN bn
cabbrev bN bn
cabbrev Bp bp
cabbrev BP bp
cabbrev bP bp
cabbrev Qall qall
" Disable Shift Enter due to fat fingers
map <S-CR> <Nop>
" Disable case shift
map ` <Nop>


"""""" Keyboard remapping
" Make ; another : - no more shift needed!
nnoremap ; :
" Set ,/ to hid search hilights
nmap <silent> ,/ ;nohlsearch<CR>
" Make arrow keys useful again
map <down> <ESC>;bn<RETURN>
map <up> <ESC>;bp<RETURN>
map <left> <ESC><C-W><left>
map <right> <ESC><C-W><right>
" YCM go to definition
nnoremap <leader>l :YcmCompleter GoToDefinition<CR>


"""""" Terminal stuff
set title                       " Change terminal's title
set visualbell                  " No bell
set noerrorbells                " No bell


"""""" Scroll with context
set scrolloff=10
set sidescrolloff=10


""""""""""""""""""""""""""""""""""
" autoreloading of vim config when saving it
autocmd! bufwritepost .vimrc source ~/.vimrc
